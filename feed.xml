<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-24T03:35:45+05:30</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">Introducing Spintronics</title><link href="http://localhost:4000/2020/05/24/spintronics.html" rel="alternate" type="text/html" title="Introducing Spintronics" /><published>2020-05-24T00:00:00+05:30</published><updated>2020-05-24T00:00:00+05:30</updated><id>http://localhost:4000/2020/05/24/spintronics</id><content type="html" xml:base="http://localhost:4000/2020/05/24/spintronics.html">&lt;h1 id=&quot;spintronics&quot;&gt;Spintronics&lt;/h1&gt;

&lt;p&gt;We utilize the spin degree of freedom of the electron.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Maekawa Spin Electronics&lt;/li&gt;
  &lt;li&gt;Marrows&lt;/li&gt;
  &lt;li&gt;JAC Bland&lt;/li&gt;
&lt;/ul&gt;</content><author><name>fubar</name></author><category term="physics" /><summary type="html">Spintronics We utilize the spin degree of freedom of the electron. References Maekawa Spin Electronics Marrows JAC Bland</summary></entry><entry><title type="html">Cheat sheet for GIT</title><link href="http://localhost:4000/2020/05/23/Git-Command-Cheat-Sheet.html" rel="alternate" type="text/html" title="Cheat sheet for GIT" /><published>2020-05-23T00:00:00+05:30</published><updated>2020-05-23T00:00:00+05:30</updated><id>http://localhost:4000/2020/05/23/Git-Command-Cheat-Sheet</id><content type="html" xml:base="http://localhost:4000/2020/05/23/Git-Command-Cheat-Sheet.html">&lt;h1 id=&quot;beginner-level-git-command-cheat-sheet&quot;&gt;Beginner level GIT command cheat sheet&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;local/dir/path&amp;gt;$git clone &amp;lt;path/to/repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This accesses the remote git repository and clones it at the local directory path &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;local/dir/path&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$git restore .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Suppose you did some changes to existing files and now intend have a clean slate of the working directory restored upto the last commit. As long as you have not done a commit yet, you are safe simply use the &lt;code class=&quot;highlighter-rouge&quot;&gt;restore&lt;/code&gt; command to erase the modifications.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$git clean [-n] [-f] [-d]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you have added new files which are not yet tracked then restore will not work. You need to use &lt;code class=&quot;highlighter-rouge&quot;&gt;clean&lt;/code&gt; command. The &lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; flag will list the files that can be possibly cleaned if the &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; flag is used. So &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; will clean the files whereas &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; will clean the directories. This is useful when you do an error in copying files to the working directory and dont intend to keep the files.&lt;/p&gt;

&lt;p&gt;This is taken from this &lt;a href=&quot;https://stackoverflow.com/questions/61212/how-to-remove-local-untracked-files-from-the-current-git-working-tree&quot;&gt;SO post&lt;/a&gt;.&lt;/p&gt;</content><author><name>fubar</name></author><category term="programming" /><summary type="html">Beginner level GIT command cheat sheet &amp;lt;local/dir/path&amp;gt;$git clone &amp;lt;path/to/repository&amp;gt; This accesses the remote git repository and clones it at the local directory path &amp;lt;local/dir/path&amp;gt; $git restore . Suppose you did some changes to existing files and now intend have a clean slate of the working directory restored upto the last commit. As long as you have not done a commit yet, you are safe simply use the restore command to erase the modifications. $git clean [-n] [-f] [-d] If you have added new files which are not yet tracked then restore will not work. You need to use clean command. The -n flag will list the files that can be possibly cleaned if the -f flag is used. So -f will clean the files whereas -d will clean the directories. This is useful when you do an error in copying files to the working directory and dont intend to keep the files. This is taken from this SO post.</summary></entry><entry><title type="html">pyVISA on Windows</title><link href="http://localhost:4000/2019/10/21/Interface-VISA-hardware-with-Windows-using-Python.html" rel="alternate" type="text/html" title="pyVISA on Windows" /><published>2019-10-21T00:00:00+05:30</published><updated>2019-10-21T00:00:00+05:30</updated><id>http://localhost:4000/2019/10/21/Interface-VISA-hardware-with-Windows-using-Python</id><content type="html" xml:base="http://localhost:4000/2019/10/21/Interface-VISA-hardware-with-Windows-using-Python.html">&lt;h1 id=&quot;howto-interface-visa-compatible-hardware-using-python&quot;&gt;HOWTO interface VISA compatible hardware using Python&lt;/h1&gt;

&lt;h1 id=&quot;history-of-visa&quot;&gt;History of VISA&lt;/h1&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;requirements&quot;&gt;Requirements&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;VISA implementation from National Instruments: NI- VISA&lt;/li&gt;
  &lt;li&gt;Keithley USB488A and USB488B GPIB drivers&lt;/li&gt;
  &lt;li&gt;PyVISA: Python package that is a frontend to the VISA library&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ni--visa&quot;&gt;NI- VISA&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ni.com/en-in/support/downloads/drivers/download.ni-visa.html#305862&quot;&gt;Download: Permanent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ni.com/pdf/manuals/370423a.pdf&quot;&gt;Documentation : Permanent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/documents/PyVISA/National-Instruments-2001-NI-VISA-User-Manual.pdf&quot;&gt;Documentation: Mirror&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;keithley-gpib-to-usb-drivers&quot;&gt;Keithley GPIB to USB drivers&lt;/h1&gt;

&lt;p&gt;488A is older version of the GPIB to USB adaptor. The driver development is supported only till Windows 7. So if trying to install the driver on later Windows versions, it might get tricky&lt;/p&gt;

&lt;p&gt;Newer version is 488B&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tek.com/accessory/ki-488/3-1-3-1&quot;&gt;Download KUSB-488B GPIB driver&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tek.com/accessory/gpib488/9-2-0&quot;&gt;Download KUSB-488A GPIB driver&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;It is essential to have no traces of previous installations of either the GPIB2USB drivers or the VISA libraries. This is ensured from checking the device manager  and installed programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In case PyVISA-py is already installed in a virtual environment, running
&lt;code class=&quot;highlighter-rouge&quot;&gt;python -m visa info&lt;/code&gt; will list the VISA libraries(either NI’s implementation or PyVISA-py’s own pure Python implemenation).
This check is optional and needed only if one is not sure if the drivers and VISA libraries are completely uninstalled&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;remove-the-previous-installation&quot;&gt;Remove the previous installation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-00.png&quot; alt=&quot;Before Installation - Remove the VISA libraries&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Plug the Keithley GPIB-USB adaptor and check the device manager listing. The hardware is not listed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-01.png&quot; alt=&quot;Before Installation - Check the device manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Check the installed programs.  The driver is for KUSB-488B and the hardware is KUSB-USB488A. Hence it is not listed. Unplug the adaptor and remove the installed driver.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-02.png&quot; alt=&quot;Before Installation - Remove the Installed Keithley Driver&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;check-the-system-is-clean&quot;&gt;Check the system is clean&lt;/h2&gt;

&lt;p&gt;Run  ` python -m visa info` and see if the sytem is clean and ready for proper installation&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-03.png&quot; alt=&quot;Before Installation -Check the system is clean 00&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again plug the the Keithley GPIB-USB adaptor and check the device manager listing. This confirms that the system is ready for a proper installation of hardware.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-04.png&quot; alt=&quot;Before Installation -Check the system is clean 01&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;install-the-keithley-gpib2usb-drivers&quot;&gt;Install the Keithley GPIB2USB drivers&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ensure the hardware is unplugged&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Install the KUSB-488A driver with version 9.2.0. According to the release notes within the source directory,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;it is recommended to install the Keithley’s adaptor driver first followed by the NI’s own GPIB-488.2 driver to avoid vendor design conflict.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-05.png&quot; alt=&quot;Install the GPIB2USB driver 00&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rebooting the computer is a requirement after the completion of installations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-06.png&quot; alt=&quot;Install the GPIB2USB driver 01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After reboot, plug the hardware and check if it is installed in the device manager&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-07.png&quot; alt=&quot;Install the GPIB2USB driver 02&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;install-the-ni-visa-library&quot;&gt;Install the NI-VISA library&lt;/h2&gt;

&lt;p&gt;Install the NI’s implementation of the VISA specification; version 19.0&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-08.png&quot; alt=&quot;Install NI-VISA library-00&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Uncheck the additional services provided by NI as these will only increase the number of unneccessary processes and services running in the background. In the older versions of NI-VISA, the option to uncheck GPIB-488.2 driver from NI was present in the installer. However the current version automatically checks for the GPIB driver pre-installed and accordingly proceeds with the installation to avoid conflict.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-09.png&quot; alt=&quot;Install NI-VISA library-01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After installation, check for the installed components. Check that the GPIB driver is from Maintainer GPIB-488 whereas NI-VISA is from NI itself.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-10.png&quot; alt=&quot;Install NI-VISA library-02&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A successful installation creates &lt;code class=&quot;highlighter-rouge&quot;&gt;visa32.dll&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;visa64.dll&lt;/code&gt; dynamically linked libraries. DLL files are shareable libraries which can be ported as it is across systems offering convience of using software without recompiling on new systems. They act like patches.&lt;/p&gt;

&lt;p&gt;After the installation, look out for the install location; usually the &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\\Windows\system32&lt;/code&gt; and search for &lt;code class=&quot;highlighter-rouge&quot;&gt;visa32.dll&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;visa64.dll&lt;/code&gt;. If they are present there, then PyVISA-py can detect them without fuss. If they are not present there (for some reason), then proceed to the &lt;a href=&quot;##[Digression]-Alternative-Installation-of-VISA-library&quot;&gt;alternative installation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;digression-alternative-installation-of-visa-library&quot;&gt;[Digression] Alternative Installation of VISA library&lt;/h2&gt;

&lt;p&gt;For some reason, my VISA installation has not generated the DLLs at the location. I searched for visa* (* is called a wild card evaluating to any character set like 32.dll or 64.dll) across the WINDOWS directory and found a &lt;code class=&quot;highlighter-rouge&quot;&gt;visa32.dll&lt;/code&gt; at &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Windows\SysWOW64\visa32.dll&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To demonstrate the portability of DLL files, I copied the &lt;code class=&quot;highlighter-rouge&quot;&gt;visa32.dll&lt;/code&gt; to the PyVISA virtual environment (described below) and checked for the detection of the visa library.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python -m visa info&lt;/code&gt; lists the detection of the visa32 library at the path of the virtual environment.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;However the bitness of Python installation (64 bit) and that of VISA (32bit) do not match. We need to fix this!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PyVISA/InstallationPyVISA-11.png&quot; alt=&quot;Install NI-VISA library-03&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-a-virtual-environment&quot;&gt;Create a virtual environment&lt;/h2&gt;

&lt;p&gt;Tools available with us:&lt;/p&gt;

&lt;p&gt;32 bit VISAcd&lt;/p&gt;</content><author><name>fubar</name></author><category term="programming" /><summary type="html">HOWTO interface VISA compatible hardware using Python History of VISA Requirements VISA implementation from National Instruments: NI- VISA Keithley USB488A and USB488B GPIB drivers PyVISA: Python package that is a frontend to the VISA library NI- VISA Download: Permanent Documentation : Permanent Documentation: Mirror Keithley GPIB to USB drivers 488A is older version of the GPIB to USB adaptor. The driver development is supported only till Windows 7. So if trying to install the driver on later Windows versions, it might get tricky Newer version is 488B Download KUSB-488B GPIB driver Download KUSB-488A GPIB driver Installation It is essential to have no traces of previous installations of either the GPIB2USB drivers or the VISA libraries. This is ensured from checking the device manager and installed programs. In case PyVISA-py is already installed in a virtual environment, running python -m visa info will list the VISA libraries(either NI’s implementation or PyVISA-py’s own pure Python implemenation). This check is optional and needed only if one is not sure if the drivers and VISA libraries are completely uninstalled Remove the previous installation Plug the Keithley GPIB-USB adaptor and check the device manager listing. The hardware is not listed. Check the installed programs. The driver is for KUSB-488B and the hardware is KUSB-USB488A. Hence it is not listed. Unplug the adaptor and remove the installed driver. Check the system is clean Run ` python -m visa info` and see if the sytem is clean and ready for proper installation Again plug the the Keithley GPIB-USB adaptor and check the device manager listing. This confirms that the system is ready for a proper installation of hardware. Install the Keithley GPIB2USB drivers Ensure the hardware is unplugged Install the KUSB-488A driver with version 9.2.0. According to the release notes within the source directory, it is recommended to install the Keithley’s adaptor driver first followed by the NI’s own GPIB-488.2 driver to avoid vendor design conflict. Rebooting the computer is a requirement after the completion of installations After reboot, plug the hardware and check if it is installed in the device manager Install the NI-VISA library Install the NI’s implementation of the VISA specification; version 19.0 Uncheck the additional services provided by NI as these will only increase the number of unneccessary processes and services running in the background. In the older versions of NI-VISA, the option to uncheck GPIB-488.2 driver from NI was present in the installer. However the current version automatically checks for the GPIB driver pre-installed and accordingly proceeds with the installation to avoid conflict. After installation, check for the installed components. Check that the GPIB driver is from Maintainer GPIB-488 whereas NI-VISA is from NI itself. A successful installation creates visa32.dll and visa64.dll dynamically linked libraries. DLL files are shareable libraries which can be ported as it is across systems offering convience of using software without recompiling on new systems. They act like patches. After the installation, look out for the install location; usually the C:\\Windows\system32 and search for visa32.dll and visa64.dll. If they are present there, then PyVISA-py can detect them without fuss. If they are not present there (for some reason), then proceed to the alternative installation [Digression] Alternative Installation of VISA library For some reason, my VISA installation has not generated the DLLs at the location. I searched for visa* (* is called a wild card evaluating to any character set like 32.dll or 64.dll) across the WINDOWS directory and found a visa32.dll at C:\Windows\SysWOW64\visa32.dll. To demonstrate the portability of DLL files, I copied the visa32.dll to the PyVISA virtual environment (described below) and checked for the detection of the visa library. python -m visa info lists the detection of the visa32 library at the path of the virtual environment. However the bitness of Python installation (64 bit) and that of VISA (32bit) do not match. We need to fix this! Create a virtual environment Tools available with us: 32 bit VISAcd</summary></entry><entry><title type="html">Building a Jekyll Website</title><link href="http://localhost:4000/2019/10/13/Building-Jekyll-website.html" rel="alternate" type="text/html" title="Building a Jekyll Website" /><published>2019-10-13T00:00:00+05:30</published><updated>2019-10-13T00:00:00+05:30</updated><id>http://localhost:4000/2019/10/13/Building-Jekyll-website</id><content type="html" xml:base="http://localhost:4000/2019/10/13/Building-Jekyll-website.html">&lt;h1 id=&quot;what-is-jekyll&quot;&gt;What is jekyll?&lt;/h1&gt;

&lt;h3 id=&quot;keywords-simple-static-blog-aware&quot;&gt;keywords: simple, static, blog aware&lt;/h3&gt;

&lt;p&gt;Jekyll is a static site generator. It gives programmatic access to the various tools used for creating static websites. With a prime focus on handling static content, Jekyll, a Ruby gem provides objects to handle various elements present in a web page like&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;content structuring by the use of content asset variablizing (posts, interlinking and intra-linking between and within posts, authors, layout, includes, data, support for Markdown),&lt;/li&gt;
  &lt;li&gt;content styling by the use of style asset variablizing  (CSS, SCSS, SASS) and&lt;/li&gt;
  &lt;li&gt;multimedia asset handling by the use of global placeholders (for images, Java Scripts)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/static-assets.svg&quot; alt=&quot;Jekyll the Content Keeper&quot; title=&quot;Image taken from ... &quot; /&gt;&lt;/p&gt;

&lt;p&gt;Find the source of the above image #TODO&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-static-website&quot;&gt;What is a static website?&lt;/h2&gt;
&lt;p&gt;In simple terms, static websites are read only websites. The tools required for such websites include but not limited to the standard web tools like HTML, CSS, JS. Historically, static websites generation involved tools used for making complex websites like databases for content handling, preprocessors for generating the HTML content using PHP, serving the content using server all combined in a package called LAMP (Linux Apache MySQL PHP), WAMP (Windows Apache MySQL PHP). Howver, this posed high maintenance overhead in terms of security, upgradation. As a website administrator, a simple no-frills solution with source code based on simple text files was a great boon. Jekyll is one among the new generation of static site generators.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-dynamic-website&quot;&gt;What is a dynamic website?&lt;/h2&gt;
&lt;p&gt;Responsive websites which have forms, have preprocessing tools liks PHP&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;what-jekyll-is-not&quot;&gt;What Jekyll is &lt;strong&gt;not&lt;/strong&gt;?&lt;/h1&gt;

&lt;p&gt;Jekyll cannot generator responsive websites. Webpages that enable server side heavy duty programming tasks like cloud computation (what it is #TODO), graphic rendering. As such, it is intended to make websites which are read only, journal keeping as typical in  the case of Wordpress-based webpages.&lt;/p&gt;

&lt;p&gt;Responsiveness from readers can be added in the form of widgets like Disqus widgets. which essentially is a link to the disqus server that does the processing. My feeling is that a java script handles such responses.&lt;/p&gt;

&lt;p&gt;In that way, Jekyll can partially generate responsive websites with the help of JS&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;which-jekyll&quot;&gt;Which Jekyll?&lt;/h1&gt;

&lt;p&gt;Jekyll v4 is production ready using HTML5, CSS3 and JS(version ?).&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;why-jekyll-why-not-others&quot;&gt;Why Jekyll? Why not others?&lt;/h1&gt;

&lt;p&gt;Other static generators like Python based Zim Desktop wiki also generate static sites. However Jekyll offers a seamless integration of desktop and web interfaces in the form of support for Markdown, version control using Git and easy deployment to GitHub for web hosting, and content editing using Atom text editor.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;what-are-static-assets&quot;&gt;What are static assets?&lt;/h1&gt;

&lt;p&gt;HTML, CSS, JS&lt;/p&gt;</content><author><name>fubar</name></author><category term="programming" /><summary type="html">What is jekyll? keywords: simple, static, blog aware Jekyll is a static site generator. It gives programmatic access to the various tools used for creating static websites. With a prime focus on handling static content, Jekyll, a Ruby gem provides objects to handle various elements present in a web page like content structuring by the use of content asset variablizing (posts, interlinking and intra-linking between and within posts, authors, layout, includes, data, support for Markdown), content styling by the use of style asset variablizing (CSS, SCSS, SASS) and multimedia asset handling by the use of global placeholders (for images, Java Scripts) Find the source of the above image #TODO What is a static website? In simple terms, static websites are read only websites. The tools required for such websites include but not limited to the standard web tools like HTML, CSS, JS. Historically, static websites generation involved tools used for making complex websites like databases for content handling, preprocessors for generating the HTML content using PHP, serving the content using server all combined in a package called LAMP (Linux Apache MySQL PHP), WAMP (Windows Apache MySQL PHP). Howver, this posed high maintenance overhead in terms of security, upgradation. As a website administrator, a simple no-frills solution with source code based on simple text files was a great boon. Jekyll is one among the new generation of static site generators. What is a dynamic website? Responsive websites which have forms, have preprocessing tools liks PHP What Jekyll is not? Jekyll cannot generator responsive websites. Webpages that enable server side heavy duty programming tasks like cloud computation (what it is #TODO), graphic rendering. As such, it is intended to make websites which are read only, journal keeping as typical in the case of Wordpress-based webpages. Responsiveness from readers can be added in the form of widgets like Disqus widgets. which essentially is a link to the disqus server that does the processing. My feeling is that a java script handles such responses. In that way, Jekyll can partially generate responsive websites with the help of JS Which Jekyll? Jekyll v4 is production ready using HTML5, CSS3 and JS(version ?). Why Jekyll? Why not others? Other static generators like Python based Zim Desktop wiki also generate static sites. However Jekyll offers a seamless integration of desktop and web interfaces in the form of support for Markdown, version control using Git and easy deployment to GitHub for web hosting, and content editing using Atom text editor. What are static assets? HTML, CSS, JS</summary></entry><entry><title type="html">Python Scripts to set static or dynamic IP address</title><link href="http://localhost:4000/2019/09/30/Scripts-to-set-IP-Address-Statically-or-Dynamically.html" rel="alternate" type="text/html" title="Python Scripts to set static or dynamic  IP address" /><published>2019-09-30T00:00:00+05:30</published><updated>2019-09-30T00:00:00+05:30</updated><id>http://localhost:4000/2019/09/30/Scripts-to-set-IP-Address-Statically-or-Dynamically</id><content type="html" xml:base="http://localhost:4000/2019/09/30/Scripts-to-set-IP-Address-Statically-or-Dynamically.html">&lt;p&gt;The reason to set up a &lt;a href=&quot;/2019/08/25/ADSL-modem+router-as-WAP.html&quot;&gt;ADSL router as a switch&lt;/a&gt; was to enhance the WiFi signal at my office desk. However sometimes I need to switch back to the &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt; WiFi interface when I move my laptop.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;setting-dynamic-ip&quot;&gt;Setting dynamic IP&lt;/h1&gt;

&lt;p&gt;Firstly my laptop WiFi adaptor has connected to the &lt;code class=&quot;highlighter-rouge&quot;&gt;wololo&lt;/code&gt; WAP of the ADSL modem+router&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetDynamicIPusingPowershell0.png&quot; alt=&quot;Connected to wololo interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Disconnect from the &lt;code class=&quot;highlighter-rouge&quot;&gt;wololo&lt;/code&gt; WAP&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetDynamicIPusingPowershell1.png&quot; alt=&quot;WiFi interface is floating&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enable the &lt;code class=&quot;highlighter-rouge&quot;&gt;WiFi&lt;/code&gt; interface to have DHCP enabled&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-NetAdapter -Name WiFi | Set-NetIPInterface -Dhcp Enabled&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetDynamicIPusingPowershell2.png&quot; alt=&quot;DHCP is enabled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Connect to the &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt; WAP. The DHCP server at &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.240.1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.1&lt;/code&gt; dynamically assigns &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.240.122&lt;/code&gt; IP Address to the WiFi interface having index &lt;code class=&quot;highlighter-rouge&quot;&gt;17&lt;/code&gt; and alias  &lt;code class=&quot;highlighter-rouge&quot;&gt;WiFi&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetDynamicIPusingPowershell3.png&quot; alt=&quot;Set IP dynamically&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Notice the DNS servers set to &lt;code class=&quot;highlighter-rouge&quot;&gt;10.16.25.13&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;10.16.25.15&lt;/code&gt;. However sometimes these are not set and need to be fetched from the DHCP servers&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Set-DnsClientServerAddress -InterfaceIndex 17 -ResetServerAddresses&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetDynamicIPusingPowershell4.png&quot; alt=&quot;Set DHCP servers dynamically&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this way, the IP set dynamically. Thats it!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;setting-static-ip&quot;&gt;Setting static IP&lt;/h1&gt;

&lt;p&gt;Run a powershell as an Administrator and check the interface index for the WiFi interface. The Interface has index &lt;code class=&quot;highlighter-rouge&quot;&gt;17&lt;/code&gt; with alias &lt;code class=&quot;highlighter-rouge&quot;&gt;WiFi&lt;/code&gt;. It is connected to the &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt; WAP using the IP address &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.240.122&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GetNetIPConfiguration&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetStaticIPusingPowershell0.png&quot; alt=&quot;Check the interface parameters&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Disconnect from the &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt; WAP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetStaticIPusingPowershell1.png&quot; alt=&quot;Interface is disconnected&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To connect to the &lt;code class=&quot;highlighter-rouge&quot;&gt;wololo&lt;/code&gt; WAP we need to know its network address. We know it belongs to &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.x&lt;/code&gt; network address with the available IP addresss starting from &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.16-255&lt;/code&gt; as the router addresss is &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.1&lt;/code&gt;. Let us set the IP address of the &lt;code class=&quot;highlighter-rouge&quot;&gt;WiFi&lt;/code&gt; interface to belong to this range. Let us reserve &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.16&lt;/code&gt; for the desktop computer’s ethernet interface.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;New-NetIPAddress -InterfaceIndex 17 -IPAddress 10.43.79.17 -PrefixLength 24 -DefaultGateway 10.43.79.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This pops a &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows System Error 87&lt;/code&gt; which says that the default Gateway already exists. Let us remove the Default Gateway option and try again&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;New-NetIPAddress -InterfaceIndex 17 -IPAddress 10.43.79.17 -PrefixLength 24&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Again pops up an &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows System Error 87&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetStaticIPusingPowershell2.png&quot; alt=&quot;Set the static IP fails&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To resolve this first connect to the &lt;code class=&quot;highlighter-rouge&quot;&gt;wololo&lt;/code&gt; WAP then execute the command without the default gateway as already the previous &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt; WAP had the same default gateway &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.1&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetStaticIPusingPowershell3.png&quot; alt=&quot;Set the static IP passes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We need to set the DNS servers.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Set-DnsClientServerAddress -InterfaceIndex 17 -ServerAddresses 10.16.25.13, 10.16.25.15&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/SetStaticIPusingPowershell4.png&quot; alt=&quot;Set the DNS server&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this way, the IP set statically. Thats it!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;setting-the-ip-address-dynamically-using-a-python-script&quot;&gt;Setting the IP address dynamically using a Python script&lt;/h1&gt;

&lt;p&gt;Entering these commands is useful. However due to the correct sequence required as well as accuracy requirements, it is better to have a script individually for the static or dynamic setting of IP addresses.&lt;/p&gt;

&lt;p&gt;Thanks to Python’s scripting capability to handle system command execution, we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;subprocess&lt;/code&gt; module for the task&lt;/p&gt;

&lt;h2 id=&quot;python-script-to-set-static-ip&quot;&gt;Python script to set Static IP&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!python
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'''Script to set Static IP to the WiFi adaptor of laptop.
 so that it belongs to the same network address range
  as that of the WAP of the router configured to work like a switch.'''&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;staticIP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'''netsh interface ip set address name=&quot;WiFi&quot; static 10.43.79.17 255.255.255.0 10.43.79.1'''&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;command1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staticIP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;staticDNS1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'''netsh interface ip set dns name=&quot;WiFi&quot; static 10.16.25.13'''&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;command2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staticDNS1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;staticDNS2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'''netsh interface ip add dns name=&quot;WiFi&quot; 10.16.25.15 index=2'''&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;command3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staticDNS2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;python-script-to-set-dynamic-ip&quot;&gt;Python script to set Dynamic IP&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!python
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'''Script to set Dynamic IP to the WiFi adaptor of laptop
 so that it auto configure to have an IP address that
 belongs to the same network address as that of the iiscwlan WAP.'''&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dhcpCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'''netsh interface ip set address &quot;WiFi&quot; dhcp'''&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dhcpCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>fubar</name></author><category term="programming" /><summary type="html">The reason to set up a ADSL router as a switch was to enhance the WiFi signal at my office desk. However sometimes I need to switch back to the iiscwlan WiFi interface when I move my laptop. Setting dynamic IP Firstly my laptop WiFi adaptor has connected to the wololo WAP of the ADSL modem+router Disconnect from the wololo WAP Enable the WiFi interface to have DHCP enabled Get-NetAdapter -Name WiFi | Set-NetIPInterface -Dhcp Enabled Connect to the iiscwlan WAP. The DHCP server at 10.43.240.1 and 10.43.79.1 dynamically assigns 10.43.240.122 IP Address to the WiFi interface having index 17 and alias WiFi. Notice the DNS servers set to 10.16.25.13 and 10.16.25.15. However sometimes these are not set and need to be fetched from the DHCP servers Set-DnsClientServerAddress -InterfaceIndex 17 -ResetServerAddresses In this way, the IP set dynamically. Thats it! Setting static IP Run a powershell as an Administrator and check the interface index for the WiFi interface. The Interface has index 17 with alias WiFi. It is connected to the iiscwlan WAP using the IP address 10.43.240.122. GetNetIPConfiguration Disconnect from the iiscwlan WAP. To connect to the wololo WAP we need to know its network address. We know it belongs to 10.43.79.x network address with the available IP addresss starting from 10.43.79.16-255 as the router addresss is 10.43.79.1. Let us set the IP address of the WiFi interface to belong to this range. Let us reserve 10.43.79.16 for the desktop computer’s ethernet interface. New-NetIPAddress -InterfaceIndex 17 -IPAddress 10.43.79.17 -PrefixLength 24 -DefaultGateway 10.43.79.1 This pops a Windows System Error 87 which says that the default Gateway already exists. Let us remove the Default Gateway option and try again New-NetIPAddress -InterfaceIndex 17 -IPAddress 10.43.79.17 -PrefixLength 24 Again pops up an Windows System Error 87 To resolve this first connect to the wololo WAP then execute the command without the default gateway as already the previous iiscwlan WAP had the same default gateway 10.43.79.1 We need to set the DNS servers. Set-DnsClientServerAddress -InterfaceIndex 17 -ServerAddresses 10.16.25.13, 10.16.25.15 In this way, the IP set statically. Thats it! Setting the IP address dynamically using a Python script Entering these commands is useful. However due to the correct sequence required as well as accuracy requirements, it is better to have a script individually for the static or dynamic setting of IP addresses. Thanks to Python’s scripting capability to handle system command execution, we use the subprocess module for the task Python script to set Static IP #!python '''Script to set Static IP to the WiFi adaptor of laptop. so that it belongs to the same network address range as that of the WAP of the router configured to work like a switch.''' import subprocess staticIP = '''netsh interface ip set address name=&quot;WiFi&quot; static 10.43.79.17 255.255.255.0 10.43.79.1''' command1 = staticIP.split() subprocess.run(command1) staticDNS1 = '''netsh interface ip set dns name=&quot;WiFi&quot; static 10.16.25.13''' command2 = staticDNS1.split() subprocess.run(command2) staticDNS2 = '''netsh interface ip add dns name=&quot;WiFi&quot; 10.16.25.15 index=2''' command3 = staticDNS2.split() subprocess.run(command3) Python script to set Dynamic IP #!python '''Script to set Dynamic IP to the WiFi adaptor of laptop so that it auto configure to have an IP address that belongs to the same network address as that of the iiscwlan WAP.''' import subprocess dhcpCommand = '''netsh interface ip set address &quot;WiFi&quot; dhcp''' command = dhcpCommand.split() subprocess.run(command)</summary></entry><entry><title type="html">History of fonts</title><link href="http://localhost:4000/2019/09/27/fonts.html" rel="alternate" type="text/html" title="History of fonts" /><published>2019-09-27T00:00:00+05:30</published><updated>2019-09-27T00:00:00+05:30</updated><id>http://localhost:4000/2019/09/27/fonts</id><content type="html" xml:base="http://localhost:4000/2019/09/27/fonts.html">&lt;h2 id=&quot;history-of-fonts&quot;&gt;History of fonts&lt;/h2&gt;

&lt;p&gt;The origin of fonts dates back to the Egyptian heiroglyphs. Heiroglyph (&lt;em&gt;heiros glypho&lt;/em&gt; meaning sacred carving) forms a set of symbols to represent ideas and emotions. From the symbolic representation of ideas, language was codified using alphabet to have more efficient representation. Alphabet is also a set of symbols. However, they differ from the heiroglyphs in the sense that instead of a single glyph representing a single idea in the case of heiroglyph, an ordered group of glyphs is used to represent an idea. This ordered group of glyph is called a &lt;strong&gt;word&lt;/strong&gt;. Since alphabet need to be carved just the same as heiroglyphs, alphabet provided a freedom of expression allowing slight modifications to the standard template or design allowing designers a medium for expressing sub-emotions and sub-culture. An alphabet with a specific collection of glyphs makes a &lt;strong&gt;font&lt;/strong&gt;. There are other characteristics to glyphs and placement of glyphs. Fonts can be classified based on some characteristics like common glyph template. Such grouping of fonts is called a &lt;strong&gt;typeface&lt;/strong&gt; or &lt;strong&gt;font-family&lt;/strong&gt;. So an &lt;strong&gt;Avenir Light Standard&lt;/strong&gt; belongs to the &lt;strong&gt;Avenir&lt;/strong&gt; typeface/font family which has other fonts like &lt;strong&gt;Avenir Book&lt;/strong&gt;, &lt;strong&gt;Avenir Condensed&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;font-categories&quot;&gt;Font categories&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Vox-ATypI_classification&quot;&gt;Vox-ATypl classification&lt;/a&gt; was first classification of the typefaces carried out in 1954 by Maximillien Vox organizing the typefaces into 10 general categories. Later British Standards based their type classification on the former system and categorized them into 3 classes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Classicals which subclassified into Humanist, Garaldes and Transitional&lt;/li&gt;
  &lt;li&gt;Moderns which include Modern Serif, Slab Serif, Grotesque, Neo Grotesque, Geometric Sans, Humanist Sans Serif&lt;/li&gt;
  &lt;li&gt;Calligraphics subdivided into Glyphyic, Script, Graphic, Blackletter and Gaelic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However this classification is subject to interpretation. Some resources classify based on the standard characteristics into Sans Serif, Serif, Slab Serif, Script, Display and Blackletter. &lt;a href=&quot;https://www.azfonts.net/&quot;&gt;A-Zfonts&lt;/a&gt; uses such classification.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;geometric-typefaces&quot;&gt;Geometric typefaces&lt;/h2&gt;

&lt;p&gt;Geometric typefaces take inspiration from elements of geometry; circle, equilateral triangle and square. They are major-sub-classified into&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Geometric Sans which include Avenir, Futura&lt;/li&gt;
  &lt;li&gt;Geometric Slab Serif include Rockwell, Memphis, Stymie&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;poster-typefaces&quot;&gt;Poster typefaces&lt;/h2&gt;

&lt;h2 id=&quot;font-foundries&quot;&gt;Font foundries&lt;/h2&gt;

&lt;p&gt;Adobe, Microsoft, Apple, Monotype are the major foundries.&lt;/p&gt;

&lt;p&gt;Adobe’s famous typefaces include Futura, Helvetica, Avenir,&lt;/p&gt;

&lt;p&gt;Monotype’s famous typefaces include Arial,&lt;/p&gt;</content><author><name>fubar</name></author><category term="programming" /><summary type="html">History of fonts The origin of fonts dates back to the Egyptian heiroglyphs. Heiroglyph (heiros glypho meaning sacred carving) forms a set of symbols to represent ideas and emotions. From the symbolic representation of ideas, language was codified using alphabet to have more efficient representation. Alphabet is also a set of symbols. However, they differ from the heiroglyphs in the sense that instead of a single glyph representing a single idea in the case of heiroglyph, an ordered group of glyphs is used to represent an idea. This ordered group of glyph is called a word. Since alphabet need to be carved just the same as heiroglyphs, alphabet provided a freedom of expression allowing slight modifications to the standard template or design allowing designers a medium for expressing sub-emotions and sub-culture. An alphabet with a specific collection of glyphs makes a font. There are other characteristics to glyphs and placement of glyphs. Fonts can be classified based on some characteristics like common glyph template. Such grouping of fonts is called a typeface or font-family. So an Avenir Light Standard belongs to the Avenir typeface/font family which has other fonts like Avenir Book, Avenir Condensed. Font categories The Vox-ATypl classification was first classification of the typefaces carried out in 1954 by Maximillien Vox organizing the typefaces into 10 general categories. Later British Standards based their type classification on the former system and categorized them into 3 classes: Classicals which subclassified into Humanist, Garaldes and Transitional Moderns which include Modern Serif, Slab Serif, Grotesque, Neo Grotesque, Geometric Sans, Humanist Sans Serif Calligraphics subdivided into Glyphyic, Script, Graphic, Blackletter and Gaelic However this classification is subject to interpretation. Some resources classify based on the standard characteristics into Sans Serif, Serif, Slab Serif, Script, Display and Blackletter. A-Zfonts uses such classification. Geometric typefaces Geometric typefaces take inspiration from elements of geometry; circle, equilateral triangle and square. They are major-sub-classified into Geometric Sans which include Avenir, Futura Geometric Slab Serif include Rockwell, Memphis, Stymie Poster typefaces Font foundries Adobe, Microsoft, Apple, Monotype are the major foundries. Adobe’s famous typefaces include Futura, Helvetica, Avenir, Monotype’s famous typefaces include Arial,</summary></entry><entry><title type="html">Chapter22 Modules The Big Picture</title><link href="http://localhost:4000/2019/09/14/Chapter22-Modules-The-Big-Picture.html" rel="alternate" type="text/html" title="Chapter22 Modules The Big Picture" /><published>2019-09-14T00:00:00+05:30</published><updated>2019-09-14T00:00:00+05:30</updated><id>http://localhost:4000/2019/09/14/Chapter22-Modules-The-Big-Picture</id><content type="html" xml:base="http://localhost:4000/2019/09/14/Chapter22-Modules-The-Big-Picture.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In this chapter, the author introduces modules. Modules form the highest organization structure in a Python program. The &lt;em&gt;rationale&lt;/em&gt; behind modules lies in code reusability, a primary feature that Python &lt;em&gt;wants&lt;/em&gt; you to do. Using module as an example for &lt;em&gt;namespace&lt;/em&gt;, the author tries to drive home the point that a program is about managing namespaces, i.e. the space of names. This concept is revisted in other topics like &lt;a href=&quot;chapter-on-functions&quot;&gt;functions&lt;/a&gt; and &lt;a href=&quot;chapter-on-classes&quot;&gt;classes&lt;/a&gt;. This is followed by explaining the internal process when modules are imported, how existing modules are searched, and the freedom of type of module imported.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;module&quot;&gt;Module&lt;/h2&gt;

&lt;h3 id=&quot;what-is-a-module&quot;&gt;What is a module?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Modules serve as the &lt;strong&gt;highest organizational structure&lt;/strong&gt; in the architecture of a Python program. Essentially, a Python program is a system of modules.&lt;/li&gt;
  &lt;li&gt;Modules are glorified namespaces.&lt;/li&gt;
  &lt;li&gt;In concrete terms, a module typically corresponds to a Python file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-use-a-module&quot;&gt;Why use a module?&lt;/h3&gt;

&lt;p&gt;Code reuse&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Modules lets you save code in files permanently. So, code is &lt;em&gt;persistent&lt;/em&gt; unlike the code run in Python interactive prompt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Namespace partitioning&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;As a self contained system of variables/names known as &lt;strong&gt;namespace&lt;/strong&gt;, module minimizes variable name clashes across the program.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implementing shared services or metadata&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A shared resources usually entails a single copy across the system. A module can serve to contain such shared resources like global variables.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-access-the-module-namespace&quot;&gt;How to access the module namespace?&lt;/h3&gt;

&lt;p&gt;The names of a module &lt;em&gt;namespace&lt;/em&gt; can be accessed/imported by two statements and and one important function&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; statement fetches a whole module.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;from&lt;/code&gt; statement fetches particular names from a module.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;imp.reload&lt;/code&gt; function reloads a module without stopping Python.
All names defined at the top level of module file become attributes of the imported module object. In OOP jargon,&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;the module file’s global scope &lt;em&gt;morphs&lt;/em&gt; into the module object’s attribute namespace when it is imported.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;python-program-architecture&quot;&gt;Python Program architecture&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;A program is a system of modules, with one main top-level file and zero or more supplemental files called &lt;em&gt;modules&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;The top-level file (a.k.a script) contains the main flow of control of the program.&lt;/li&gt;
  &lt;li&gt;Modules are collections/libraries of tools to be used by the script.&lt;/li&gt;
  &lt;li&gt;Script uses the tools defined in module files, and modules use tools defined in other modules.&lt;/li&gt;
  &lt;li&gt;Module don’t do anything when run directly; they define the tools intended for use in other files.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#TODO&quot;&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/path/to/architecture-image.png&quot; alt=&quot;Image: PythonProgramArchitecture&quot; /&gt;&lt;/p&gt;

&lt;script&gt;
//Run script right away
  window.onload = function () {
//We'll be appending the icon to this DIV later
          var s = Snap(&quot;#iconDiv&quot;);
//Have Snap load the SVG file
    Snap.load(&quot;/assets/images/icon.svg&quot;, function(f) {
//Assign the white rectangle
                whiteRect = f.select(&quot;#whiteRect&quot;);
//Assign the whole icon group
                icon = f.select(&quot;#icon&quot;);
//When the icon is hovered over, have the white rectangle move up slightly with elastic properties
                icon.hover(function() {
        whiteRect.animate({y:270.0}, 500, mina.elastic);
                },
//And return to original position when not hovered over
                           function() {
        whiteRect.animate({y:276.82181}, 500, mina.elastic);
      }
                );
//Finally append the icon to iconDiv in the body
    s.append(f);
    });
  };
&lt;/script&gt;

&lt;!--Here's the DIV that will hold the animated SVG icon--&gt;
&lt;div id=&quot;iconDiv&quot;&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;standard-library-modules&quot;&gt;Standard Library modules&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;A Python installation comes with a set of standard library modules (around 200 modules) for various programming tasks like operating system interfaces (&lt;code class=&quot;highlighter-rouge&quot;&gt;os&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;sys&lt;/code&gt;), object persistence, text pattern matching (&lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt;), network (&lt;code class=&quot;highlighter-rouge&quot;&gt;requests&lt;/code&gt;) and Internet scripting, GUI construction (&lt;code class=&quot;highlighter-rouge&quot;&gt;tkinter&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;They are not part of the Python language, but come installed with a standard Python installation.&lt;/li&gt;
  &lt;li&gt;Due to the standard nature, they are expected to wok portably on most platforms.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;how-imports-work&quot;&gt;How imports work&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;In contrast to C/C++ &lt;code class=&quot;highlighter-rouge&quot;&gt;#include&lt;/code&gt;, which are textual insertions of file into another, Python’s &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; are runtime operations involving
    &lt;ul&gt;
      &lt;li&gt;Find the module’s files.&lt;/li&gt;
      &lt;li&gt;Compile it to byte code (if needed).&lt;/li&gt;
      &lt;li&gt;Run the module code to build the objects it defines.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Finding the module involves searching the &lt;em&gt;module search path&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;On first import, the code is compiled to generate a byte code &lt;code class=&quot;highlighter-rouge&quot;&gt;.pyc&lt;/code&gt; file. Unless the source code is modified, subsequent imports simply reuses the byte code.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.pyc&lt;/code&gt; speed future imports.&lt;/li&gt;
      &lt;li&gt;Compilation happens when file is imported. So the top-level script file is usually not compiled. To have the script file both executed as well as imported, &lt;code class=&quot;highlighter-rouge&quot;&gt;__name__&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;__main__&lt;/code&gt; are used.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Running/executing the bytecode &lt;strong&gt;assigns&lt;/strong&gt; names in the importee namespace to the attributes of the imported module object.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;module-search-path&quot;&gt;Module search path&lt;/h3&gt;

&lt;p&gt;Imports mention only the filename without extension, which is searched in a path formed by concatenation of following directories and the left most search result is taken as the file path.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;home directory of the importee files.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PYTHONPATH&lt;/code&gt; directories.&lt;/li&gt;
  &lt;li&gt;Standard library Modules.&lt;/li&gt;
  &lt;li&gt;.pth path file listing custom directories.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site-packages&lt;/code&gt; subdirectory in the Python installation for listing the third-party extensions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;The module search path is assigned to &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; attribute of the &lt;code class=&quot;highlighter-rouge&quot;&gt;sys&lt;/code&gt; standard modules&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since only the filename without extension is searched, an &lt;code class=&quot;highlighter-rouge&quot;&gt;import mod&lt;/code&gt; can resolve to any of the following files:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;mod.py&lt;/em&gt; source code file.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;mod.pyc&lt;/em&gt; byte code file.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;mod.pyo&lt;/em&gt; optimized byte code file (Generated when the script is executed using &lt;code class=&quot;highlighter-rouge&quot;&gt;-O&lt;/code&gt; flag).&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;mod.so&lt;/em&gt; or &lt;em&gt;mod.dll&lt;/em&gt; compiled extension module which is dynamically linked when imported.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;mod&lt;/em&gt; directory for package imports.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;The idea of structuring program is the &lt;em&gt;rationale&lt;/em&gt; behind modules. Modules act as namespaces so that names in one module cannot be seen by another module, unless the former is imported. This Python Program architecture helps in dividing the logic into self-contained components. In addition to the home directory and standard library modules, custom modules can be searched via the module search path setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;PYTHONPATH&lt;/code&gt; environment variable or .pth files in top-level. While importing a module, Pythons allows freedom to choose from a variety of file extensions like .py, .pyc, .pyo, .so or a directory also (as we will see in the &lt;a href=&quot;chapter-on-packages&quot;&gt;next chapter&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;This is a &lt;a href=&quot;/2019/08/30/bananas.html&quot;&gt;link&lt;/a&gt;  that refers to past post.&lt;/p&gt;

&lt;p&gt;The permalink to this page is _posts/2019-09-14-Chapter22-Modules-The-Big-Picture.md&lt;/p&gt;

&lt;p&gt;This is an internal link in Jekyll &lt;a href=&quot;#Module-search-path&quot;&gt;Module Search-Path&lt;/a&gt;&lt;/p&gt;</content><author><name>fubar</name></author><category term="programming" /><summary type="html">Introduction In this chapter, the author introduces modules. Modules form the highest organization structure in a Python program. The rationale behind modules lies in code reusability, a primary feature that Python wants you to do. Using module as an example for namespace, the author tries to drive home the point that a program is about managing namespaces, i.e. the space of names. This concept is revisted in other topics like functions and classes. This is followed by explaining the internal process when modules are imported, how existing modules are searched, and the freedom of type of module imported. Module What is a module? Modules serve as the highest organizational structure in the architecture of a Python program. Essentially, a Python program is a system of modules. Modules are glorified namespaces. In concrete terms, a module typically corresponds to a Python file. Why use a module? Code reuse Modules lets you save code in files permanently. So, code is persistent unlike the code run in Python interactive prompt Namespace partitioning As a self contained system of variables/names known as namespace, module minimizes variable name clashes across the program. Implementing shared services or metadata A shared resources usually entails a single copy across the system. A module can serve to contain such shared resources like global variables. How to access the module namespace? The names of a module namespace can be accessed/imported by two statements and and one important function import statement fetches a whole module. from statement fetches particular names from a module. imp.reload function reloads a module without stopping Python. All names defined at the top level of module file become attributes of the imported module object. In OOP jargon, the module file’s global scope morphs into the module object’s attribute namespace when it is imported. Python Program architecture A program is a system of modules, with one main top-level file and zero or more supplemental files called modules. The top-level file (a.k.a script) contains the main flow of control of the program. Modules are collections/libraries of tools to be used by the script. Script uses the tools defined in module files, and modules use tools defined in other modules. Module don’t do anything when run directly; they define the tools intended for use in other files. TODO Standard Library modules A Python installation comes with a set of standard library modules (around 200 modules) for various programming tasks like operating system interfaces (os, sys), object persistence, text pattern matching (re), network (requests) and Internet scripting, GUI construction (tkinter) They are not part of the Python language, but come installed with a standard Python installation. Due to the standard nature, they are expected to wok portably on most platforms. How imports work In contrast to C/C++ #include, which are textual insertions of file into another, Python’s import are runtime operations involving Find the module’s files. Compile it to byte code (if needed). Run the module code to build the objects it defines. Finding the module involves searching the module search path On first import, the code is compiled to generate a byte code .pyc file. Unless the source code is modified, subsequent imports simply reuses the byte code. .pyc speed future imports. Compilation happens when file is imported. So the top-level script file is usually not compiled. To have the script file both executed as well as imported, __name__ and __main__ are used. Running/executing the bytecode assigns names in the importee namespace to the attributes of the imported module object. Module search path Imports mention only the filename without extension, which is searched in a path formed by concatenation of following directories and the left most search result is taken as the file path. home directory of the importee files. PYTHONPATH directories. Standard library Modules. .pth path file listing custom directories. site-packages subdirectory in the Python installation for listing the third-party extensions. The module search path is assigned to path attribute of the sys standard modules import sys print sys.path Since only the filename without extension is searched, an import mod can resolve to any of the following files: mod.py source code file. mod.pyc byte code file. mod.pyo optimized byte code file (Generated when the script is executed using -O flag). mod.so or mod.dll compiled extension module which is dynamically linked when imported. mod directory for package imports. Summary The idea of structuring program is the rationale behind modules. Modules act as namespaces so that names in one module cannot be seen by another module, unless the former is imported. This Python Program architecture helps in dividing the logic into self-contained components. In addition to the home directory and standard library modules, custom modules can be searched via the module search path setting the PYTHONPATH environment variable or .pth files in top-level. While importing a module, Pythons allows freedom to choose from a variety of file extensions like .py, .pyc, .pyo, .so or a directory also (as we will see in the next chapter). This is a link that refers to past post. The permalink to this page is _posts/2019-09-14-Chapter22-Modules-The-Big-Picture.md/#excerpt This is an internal link in Jekyll Module Search-Path</summary></entry><entry><title type="html">On apples!</title><link href="http://localhost:4000/2019/08/31/apples.html" rel="alternate" type="text/html" title="On apples!" /><published>2019-08-31T00:00:00+05:30</published><updated>2019-08-31T00:00:00+05:30</updated><id>http://localhost:4000/2019/08/31/apples</id><content type="html" xml:base="http://localhost:4000/2019/08/31/apples.html">&lt;p&gt;An apple is a sweet, edible fruit produced by an apple tree.&lt;/p&gt;

&lt;p&gt;Apple trees are cultivated worldwide, and are the most widely grown species in
the genus Malus. The tree originated in Central Asia, where its wild ancestor,
Malus sieversii, is still found today. Apples have been grown for thousands of
years in Asia and Europe, and were brought to North America by European
colonists.&lt;/p&gt;</content><author><name>jill</name></author><category term="miscellaneous" /><summary type="html">An apple is a sweet, edible fruit produced by an apple tree. Apple trees are cultivated worldwide, and are the most widely grown species in the genus Malus. The tree originated in Central Asia, where its wild ancestor, Malus sieversii, is still found today. Apples have been grown for thousands of years in Asia and Europe, and were brought to North America by European colonists.</summary></entry><entry><title type="html">On bananas!</title><link href="http://localhost:4000/2019/08/30/bananas.html" rel="alternate" type="text/html" title="On bananas!" /><published>2019-08-30T00:00:00+05:30</published><updated>2019-08-30T00:00:00+05:30</updated><id>http://localhost:4000/2019/08/30/bananas</id><content type="html" xml:base="http://localhost:4000/2019/08/30/bananas.html">&lt;p&gt;A banana is an edible fruit – botanically a berry – produced by several kinds
of large herbaceous flowering plants in the genus Musa.&lt;/p&gt;

&lt;p&gt;In some countries, bananas used for cooking may be called “plantains”,
distinguishing them from dessert bananas. The fruit is variable in size, color,
and firmness, but is usually elongated and curved, with soft flesh rich in
starch covered with a rind, which may be green, yellow, red, purple, or brown
when ripe.&lt;/p&gt;</content><author><name>jill</name></author><category term="miscellaneous" /><summary type="html">A banana is an edible fruit – botanically a berry – produced by several kinds of large herbaceous flowering plants in the genus Musa. In some countries, bananas used for cooking may be called “plantains”, distinguishing them from dessert bananas. The fruit is variable in size, color, and firmness, but is usually elongated and curved, with soft flesh rich in starch covered with a rind, which may be green, yellow, red, purple, or brown when ripe.</summary></entry><entry><title type="html">Connecting ADSL (modem + router) as a WiFi Access Point</title><link href="http://localhost:4000/2019/08/25/ADSL-modem+router-as-WAP.html" rel="alternate" type="text/html" title="Connecting ADSL (modem + router) as a WiFi Access Point" /><published>2019-08-25T00:00:00+05:30</published><updated>2019-08-25T00:00:00+05:30</updated><id>http://localhost:4000/2019/08/25/ADSL-modem+router-as-WAP</id><content type="html" xml:base="http://localhost:4000/2019/08/25/ADSL-modem+router-as-WAP.html">&lt;p&gt;I have a TP-Link ADSL modem + router (M+R) with me. It can be used in the following modes:&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li&gt;[] high speed DSL modem&lt;/li&gt;
  &lt;li&gt;[] NAT router&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;4 port switch&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Wireless Access Point&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I want to use the (M+R) as a &lt;a href=&quot;path/to/switchpage #TODO&quot;&gt;switch&lt;/a&gt; to connect my desktop computer to the LAN. Also I want to use the (M+R) as a WiFi Access Point (WAP) as the &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt; WiFi signal at my office desk is feeble. I want to take the ethernet port as input to the (M+R).&lt;/p&gt;

&lt;p&gt;Following are the steps  to setup the (M+R) as a switch:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Setup the laptop - router interface to first talk to the router,&lt;/li&gt;
  &lt;li&gt;Match router’s network address to that of ethernet’s,&lt;/li&gt;
  &lt;li&gt;Reconfigure the laptop’s network address to match that of the router’s,&lt;/li&gt;
  &lt;li&gt;Apply the physical connections between the router and the ethernet,&lt;/li&gt;
  &lt;li&gt;[Optional] Configure the SSID parameters of the WAP.&lt;/li&gt;
  &lt;li&gt;[Optional] Create &lt;a href=&quot;/2019/09/30/Scripts-to-set-IP-Address-Statically-or-Dynamically.html&quot;&gt;scripts&lt;/a&gt; to automate these configurations&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;laptop---router-interface&quot;&gt;Laptop - Router interface&lt;/h1&gt;

&lt;p&gt;Currently I am connected to the &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt; WiFi on my laptop. This is confirmed by &lt;code class=&quot;highlighter-rouge&quot;&gt;arp&lt;/code&gt; command; Address Resolution Protocol. The current IP address is &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.241.108&lt;/code&gt; which is dynamically allocated by the router at &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.240.1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint.png&quot; alt=&quot;Connected to iiscwlan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Disconnect from &lt;code class=&quot;highlighter-rouge&quot;&gt;iiscwlan&lt;/code&gt;. Switch on the (M+R) and reset to factory defaults. Connect to the TP-LINK WiFi from the laptop. After successful connection, the IP address is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.100&lt;/code&gt;. The DHCP server in the (M+R) automatically allocates the above IP to the laptop. The router is at &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint3.png&quot; alt=&quot;Connected to TP-LINK&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Similar information related to the address can be accessed by &lt;code class=&quot;highlighter-rouge&quot;&gt;ipconfig&lt;/code&gt; program. This information is network interface centric.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint4.png&quot; alt=&quot;ipconfig info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One can check the connection is successful by pinging the server by using either names at &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt; IP address or &lt;code class=&quot;highlighter-rouge&quot;&gt;http://tplinkmodem.net&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint8.png&quot; alt=&quot;ping the router&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;configure-the-routers-network-address-to-that-of-the-ethernets&quot;&gt;Configure the router’s network address to that of the ethernet’s&lt;/h1&gt;

&lt;p&gt;Now access the (M+R) settings page using Firefox by fetching the page at &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt; IP address or &lt;code class=&quot;highlighter-rouge&quot;&gt;http://tplinkmodem.net&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint9.png&quot; alt=&quot;Access Settings Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using default admin:admin login credentials log into the settings page.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Since we want to setup (M+R) as a switch, we do not tamper with the &lt;code class=&quot;highlighter-rouge&quot;&gt;internet&lt;/code&gt; tab.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;On the &lt;code class=&quot;highlighter-rouge&quot;&gt;LAN&lt;/code&gt; tab, set the IP address to the ethernet port address designated by the department sysad.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Set the 24 bit subnet mask.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Most importantly, disable the DHCP server. We only want to set the (M+R) as a switch.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint12.png&quot; alt=&quot;Settings Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now save the settings, this will reassign a new IP address &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.15&lt;/code&gt; to the (M+R). This is shown as a &lt;code class=&quot;highlighter-rouge&quot;&gt;The connection was reset&lt;/code&gt; error As a result, there will not be a connection to the (M+R) using the previous &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt; IP address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint13.png&quot; alt=&quot;New IP address&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Till now we have not connected any cables to the router from either the ethernet port or the desktop.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now try to connect to the internet by plugging in the ethernet cable from the ethernet port to one of the four LAN ports on the router and pinging the internet from the laptop. &lt;strong&gt;This will not connect the connect to the internet.&lt;/strong&gt; That is because we have only set the IP address of the router. When the WiFi adaptor of the laptop tries to connect to the WAP, it needs an IP address. However the router cannot assign an IP to the adaptor as the DHCP is disabled. This is reflected in the &lt;code class=&quot;highlighter-rouge&quot;&gt;ipconfig /all&lt;/code&gt; output. The info still points to the iiscwlan connection. We need to reconfigure the laptop’s address to point to the router’s network address.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unplug the ethernet cable from the router.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The hardware address of the WiFi adaptor is 60-57-18-9E-97-CF.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint14.png&quot; alt=&quot;DNS server error&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;reconfigure-the-laptops-network-address-to-match-that-of-the-routers&quot;&gt;Reconfigure the laptop’s network address to match that of the router’s&lt;/h1&gt;

&lt;p&gt;This is when manual assignment of the IP address to the laptop’s WiFi adaptor needs to be done to match the network address of the router. This is accomplished using &lt;code class=&quot;highlighter-rouge&quot;&gt;netsh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netsh interface ip set address name=&quot;WiFi&quot; static 10.43.79.17 255.255.255.0 10.43.79.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netsh interface ip set dns name=&quot;WiFi&quot; static 10.16.25.13&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netsh interface ip add dns name=&quot;WiFi&quot; 10.16.25.15 index=2&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Run the command prompt as Administrator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint15.png&quot; alt=&quot;Match network address statically&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, there is a problem with setting the DNS server addresses. &lt;a href=&quot;/page/to/DNS-server&quot;&gt;DNS server&lt;/a&gt; serves name resolution service to the client. This is because the (M+R) is not connected to the ethernet port and able to locate the DNS server.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;physically-connect-the-router-to-the-ethernet-sub-network&quot;&gt;Physically connect the router to the ethernet sub network&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Now is the time to connect to the connnect the switch to the rest of the sub network using an ethernet cable running from the wall mounted ethernet port to one of the 4 ethernet ports of the (M+R). For this configuration, we do not have business with the modem port.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Repeating the above &lt;code class=&quot;highlighter-rouge&quot;&gt;netsh&lt;/code&gt; commands will do the trick. However let us try using powershell to set the configuration.&lt;/p&gt;

&lt;p&gt;Using powershell, we can set the static configuration.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-NetIPConfiguration&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note the InterfaceIndex
IP addresses
IP defaultGateway
DNS server&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Net-NetIPAddress -InterfaceIndex 4 -IPAddress 10.43.79.17 -PrefixLength 24 -defaultGateway 10.43.79.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Set-DnsClientServerAddress -InterfaceIndex 4 -ServerAddresses 10.16.25.13, 10.16.25.15&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Run the powershell as Administrator&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can see that you are able to connect to the router &lt;code class=&quot;highlighter-rouge&quot;&gt;10.43.79.1&lt;/code&gt; as well as the DNS servers &lt;code class=&quot;highlighter-rouge&quot;&gt;10.16.25.15&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;10.16.25.13&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Networking/NetworkingModemRouterAsAccessPoint16.png&quot; alt=&quot;Match network address statically with powershell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now the configuration is almost done. We need to change the SSID of the WiFi interface to something more relatable. Access the settings page and change the SSID name and password. Thats it!&lt;/p&gt;

&lt;p&gt;If needed perform the same thing with the desktop computer. Connect a cable to the Set statically the IP address.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;optional-configure-the-wap&quot;&gt;Optional: Configure the WAP&lt;/h1&gt;

&lt;p&gt;The router comes with default SSID (Service Set Identifier) name and password for its WAP interface. However if needed, these can be reconfigured by accessing the router’s settings page and changing these parameters in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Wireless&lt;/code&gt; tab of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Interface Setup&lt;/code&gt; tab. I have set SSID as &lt;code class=&quot;highlighter-rouge&quot;&gt;wololo&lt;/code&gt; with password as &lt;code class=&quot;highlighter-rouge&quot;&gt;*********&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;optional-scripts-to-automate-the-configuration&quot;&gt;Optional: Scripts to automate the configuration&lt;/h1&gt;

&lt;p&gt;It is convenient to automate certain aspects of the network configuration like setting the static IP address of the laptop’s WiFi adaptor. This is discussed in the post on &lt;a href=&quot;/2019/09/30/Scripts-to-set-IP-Address-Statically-or-Dynamically.html&quot;&gt;Python scripts to set IP address&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://pureinfotech.com/set-static-ip-address-windows-10/&quot;&gt;How to set IP address manually in Windows&lt;/a&gt;&lt;/p&gt;</content><author><name>fubar</name></author><category term="programming" /><summary type="html">I have a TP-Link ADSL modem + router (M+R) with me. It can be used in the following modes: [] high speed DSL modem [] NAT router 4 port switch Wireless Access Point I want to use the (M+R) as a switch to connect my desktop computer to the LAN. Also I want to use the (M+R) as a WiFi Access Point (WAP) as the iiscwlan WiFi signal at my office desk is feeble. I want to take the ethernet port as input to the (M+R). Following are the steps to setup the (M+R) as a switch: Setup the laptop - router interface to first talk to the router, Match router’s network address to that of ethernet’s, Reconfigure the laptop’s network address to match that of the router’s, Apply the physical connections between the router and the ethernet, [Optional] Configure the SSID parameters of the WAP. [Optional] Create scripts to automate these configurations Laptop - Router interface Currently I am connected to the iiscwlan WiFi on my laptop. This is confirmed by arp command; Address Resolution Protocol. The current IP address is 10.43.241.108 which is dynamically allocated by the router at 10.43.240.1. Disconnect from iiscwlan. Switch on the (M+R) and reset to factory defaults. Connect to the TP-LINK WiFi from the laptop. After successful connection, the IP address is set to 192.168.1.100. The DHCP server in the (M+R) automatically allocates the above IP to the laptop. The router is at 192.168.1.1. Similar information related to the address can be accessed by ipconfig program. This information is network interface centric. One can check the connection is successful by pinging the server by using either names at 192.168.1.1 IP address or http://tplinkmodem.net. Configure the router’s network address to that of the ethernet’s Now access the (M+R) settings page using Firefox by fetching the page at 192.168.1.1 IP address or http://tplinkmodem.net. Using default admin:admin login credentials log into the settings page. Since we want to setup (M+R) as a switch, we do not tamper with the internet tab. On the LAN tab, set the IP address to the ethernet port address designated by the department sysad. Set the 24 bit subnet mask. Most importantly, disable the DHCP server. We only want to set the (M+R) as a switch. Now save the settings, this will reassign a new IP address 10.43.79.15 to the (M+R). This is shown as a The connection was reset error As a result, there will not be a connection to the (M+R) using the previous 192.168.1.1 IP address. Till now we have not connected any cables to the router from either the ethernet port or the desktop. Now try to connect to the internet by plugging in the ethernet cable from the ethernet port to one of the four LAN ports on the router and pinging the internet from the laptop. This will not connect the connect to the internet. That is because we have only set the IP address of the router. When the WiFi adaptor of the laptop tries to connect to the WAP, it needs an IP address. However the router cannot assign an IP to the adaptor as the DHCP is disabled. This is reflected in the ipconfig /all output. The info still points to the iiscwlan connection. We need to reconfigure the laptop’s address to point to the router’s network address. Unplug the ethernet cable from the router. The hardware address of the WiFi adaptor is 60-57-18-9E-97-CF. Reconfigure the laptop’s network address to match that of the router’s This is when manual assignment of the IP address to the laptop’s WiFi adaptor needs to be done to match the network address of the router. This is accomplished using netsh netsh interface ip set address name=&quot;WiFi&quot; static 10.43.79.17 255.255.255.0 10.43.79.1 netsh interface ip set dns name=&quot;WiFi&quot; static 10.16.25.13 netsh interface ip add dns name=&quot;WiFi&quot; 10.16.25.15 index=2 Run the command prompt as Administrator. However, there is a problem with setting the DNS server addresses. DNS server serves name resolution service to the client. This is because the (M+R) is not connected to the ethernet port and able to locate the DNS server. Physically connect the router to the ethernet sub network Now is the time to connect to the connnect the switch to the rest of the sub network using an ethernet cable running from the wall mounted ethernet port to one of the 4 ethernet ports of the (M+R). For this configuration, we do not have business with the modem port. Repeating the above netsh commands will do the trick. However let us try using powershell to set the configuration. Using powershell, we can set the static configuration. Get-NetIPConfiguration Note the InterfaceIndex IP addresses IP defaultGateway DNS server Net-NetIPAddress -InterfaceIndex 4 -IPAddress 10.43.79.17 -PrefixLength 24 -defaultGateway 10.43.79.1 Set-DnsClientServerAddress -InterfaceIndex 4 -ServerAddresses 10.16.25.13, 10.16.25.15 Run the powershell as Administrator You can see that you are able to connect to the router 10.43.79.1 as well as the DNS servers 10.16.25.15, 10.16.25.13 Now the configuration is almost done. We need to change the SSID of the WiFi interface to something more relatable. Access the settings page and change the SSID name and password. Thats it! If needed perform the same thing with the desktop computer. Connect a cable to the Set statically the IP address. Optional: Configure the WAP The router comes with default SSID (Service Set Identifier) name and password for its WAP interface. However if needed, these can be reconfigured by accessing the router’s settings page and changing these parameters in the Wireless tab of the Interface Setup tab. I have set SSID as wololo with password as *********. Optional: Scripts to automate the configuration It is convenient to automate certain aspects of the network configuration like setting the static IP address of the laptop’s WiFi adaptor. This is discussed in the post on Python scripts to set IP address References: How to set IP address manually in Windows</summary></entry></feed>